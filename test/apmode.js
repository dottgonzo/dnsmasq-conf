var pathExists = require("path-exists");
var mocha = require('mocha'), assert = require('chai').assert, fs = require('fs'), verb = require('verbo');
var DnsMasq = require('../index');
if (!pathExists.sync("/tmp/dnsmasq.conf")) {
    fs.writeFileSync("/tmp/dnsmasq.conf", "", "utf-8");
}
var myDns = new DnsMasq({ path: '/tmp/dnsmasq.conf', interface: 'wlan0', test: true });
myDns.setmode('ap');
verb(myDns);
describe('config', function () {
    describe('check basic existence', function () {
        it('must return something', function () {
            assert.ok(myDns, 'torna');
        });
    });
    describe('check if is the object is equals to the file', function () {
        it('read file', function () {
            assert.ok(fs.readFileSync(myDns.path), 'object file');
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvYXBtb2RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQVksVUFBVSxXQUFNLGFBQWEsQ0FBQyxDQUFBO0FBQzFDLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFDNUIsTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLEVBQy9CLEVBQUUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQ2xCLElBQUksR0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDdEIsSUFBTyxPQUFPLFdBQVMsVUFBVSxDQUFDLENBQUM7QUFDbkMsRUFBRSxDQUFBLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQSxDQUFDO0lBQ3RDLEVBQUUsQ0FBQyxhQUFhLENBQUMsbUJBQW1CLEVBQUMsRUFBRSxFQUFDLE9BQU8sQ0FBQyxDQUFBO0FBQ3BELENBQUM7QUFDRCxJQUFJLEtBQUssR0FBQyxJQUFJLE9BQU8sQ0FBQyxFQUFDLElBQUksRUFBQyxtQkFBbUIsRUFBQyxTQUFTLEVBQUMsT0FBTyxFQUFDLElBQUksRUFBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBQzlFLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDcEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFBO0FBRVgsUUFBUSxDQUFDLFFBQVEsRUFBRTtJQUNqQixRQUFRLENBQUMsdUJBQXVCLEVBQUU7UUFFbEMsRUFBRSxDQUFDLHVCQUF1QixFQUFFO1lBQzFCLE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzNCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDSCxRQUFRLENBQUMsOENBQThDLEVBQUU7UUFDdkQsRUFBRSxDQUFDLFdBQVcsRUFBRTtZQUNoQixNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQ3RELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFFSCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2FwbW9kZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHBhdGhFeGlzdHMgZnJvbSBcInBhdGgtZXhpc3RzXCI7XG52YXIgbW9jaGEgPSByZXF1aXJlKCdtb2NoYScpLFxuYXNzZXJ0ID0gcmVxdWlyZSgnY2hhaScpLmFzc2VydCxcbmZzID0gcmVxdWlyZSgnZnMnKSxcbnZlcmI9cmVxdWlyZSgndmVyYm8nKTtcbmltcG9ydCBEbnNNYXNxPXJlcXVpcmUoJy4uL2luZGV4Jyk7XG5pZighcGF0aEV4aXN0cy5zeW5jKFwiL3RtcC9kbnNtYXNxLmNvbmZcIikpe1xuICAgIGZzLndyaXRlRmlsZVN5bmMoXCIvdG1wL2Ruc21hc3EuY29uZlwiLFwiXCIsXCJ1dGYtOFwiKVxufVxubGV0IG15RG5zPW5ldyBEbnNNYXNxKHtwYXRoOicvdG1wL2Ruc21hc3EuY29uZicsaW50ZXJmYWNlOid3bGFuMCcsdGVzdDp0cnVlfSk7XG5teURucy5zZXRtb2RlKCdhcCcpO1xudmVyYihteURucylcblxuZGVzY3JpYmUoJ2NvbmZpZycsIGZ1bmN0aW9uKCkge1xuICBkZXNjcmliZSgnY2hlY2sgYmFzaWMgZXhpc3RlbmNlJywgZnVuY3Rpb24oKSB7XG5cbiAgaXQoJ211c3QgcmV0dXJuIHNvbWV0aGluZycsIGZ1bmN0aW9uKCkge1xuICAgIGFzc2VydC5vayhteURucywndG9ybmEnKTtcbiAgfSk7XG59KTtcbmRlc2NyaWJlKCdjaGVjayBpZiBpcyB0aGUgb2JqZWN0IGlzIGVxdWFscyB0byB0aGUgZmlsZScsIGZ1bmN0aW9uKCkge1xuICBpdCgncmVhZCBmaWxlJywgZnVuY3Rpb24oKSB7XG4gIGFzc2VydC5vayhmcy5yZWFkRmlsZVN5bmMobXlEbnMucGF0aCksICdvYmplY3QgZmlsZScpO1xuICB9KTtcbn0pO1xuXG59KTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
